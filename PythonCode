import numpy as np
from sklearn.metrics.pairwise import cosine_similarity

# Define movie ratings (user x movie)
ratings = np.array([
    [4, 5, 0, 2, 3],
    [3, 0, 4, 0, 0],
    [0, 2, 0, 1, 4],
    [5, 0, 3, 0, 0],
    [0, 4, 0, 5, 0],
    [2, 0, 1, 0, 3],
    [0, 0, 2, 4, 5]
])

# Calculate cosine similarity between users
similarity = cosine_similarity(ratings)

# Define the target user
target_user = 0

# Calculate the weighted average of each movie's rating for the target user
weighted_ratings = np.zeros(ratings.shape[1])
for i in range(ratings.shape[1]):
    if ratings[target_user, i] == 0:
        weighted_sum = 0
        similarity_sum = 0
        for j in range(ratings.shape[0]):
            if j != target_user and ratings[j, i] != 0:
                weighted_sum += similarity[target_user, j] * ratings[j, i]
                similarity_sum += similarity[target_user, j]
        if similarity_sum == 0:
            weighted_ratings[i] = 0
        else:
            weighted_ratings[i] = weighted_sum / similarity_sum
    else:
        weighted_ratings[i] = ratings[target_user, i]

# Get the indices of the top 3 recommended movies
top_movies = np.argsort(weighted_ratings)[::-1][:3]

# Print the recommended movies
print("Recommended movies:")
for i in top_movies:
    print(f"- Movie {i}")
